name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:

    - uses: actions/checkout@v2
    - name: Setup
      uses: actions/setup-node@v1

    - name: Install
      run: npm install esbuild

    - name: Build
      run: npm run-script build

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Deno Compile
      run: |
          deno compile --allow-all -o build/hsd-cli bundle/hsd-cli.js
          deno compile --allow-all  -o build/hsw-cli bundle/hsw-cli.js
    - name: Add NFPM Repo
      run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt update
          sudo apt install nfpm reprepro distro-info -y

    - name: Import GPG key
      id: gpg
      uses: crazy-max/ghaction-import-gpg@v5
      with:
          gpg_private_key: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
    - name: Prepare Package
      run: |
          nfpm pkg --packager deb
          mkdir -p repo/conf
          for DISTRO in "$(distro-info --supported)"; do
            cp pkg/distributions repo/conf
            echo sed -i "s/<osrelease>/${DISTRO}/" repo/conf/distributions
            echo sed -i "s/<key-id>/${GPG_KEY_ID}/" repo/conf/distributions
            sed -i "s/<osrelease>/${DISTRO}/" repo/conf/distributions
            sed -i "s/<key-id>/${GPG_KEY_ID}/" repo/conf/distributions
            reprepro -b repo/ includedeb $DISTRO *.deb
          done
      env:
          GPG_KEY_ID: ${{ steps.gpg.outputs.fingerprint }}
    - name: Upload
      uses: actions/upload-pages-artifact@v1
      with:
          path: repo

  deploy:
      # Add a dependency to the build job
      needs: build

      # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
      permissions:
          pages: write      # to deploy to Pages
          id-token: write   # to verify the deployment originates from an appropriate source

      # Deploy to the github-pages environment
      environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}

      # Specify runner + deployment step
      runs-on: ubuntu-latest
      steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v1
