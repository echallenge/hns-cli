name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:

    - uses: actions/checkout@v2
    - name: Setup
      uses: actions/setup-node@v1

    - name: Install
      run: npm install esbuild

    - name: Build
      run: npm run-script build

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Deno Compile
      run: |
          deno compile --allow-all -o build/hsd-cli bundle/hsd-cli.js
          deno compile --allow-all  -o build/hsw-cli bundle/hsw-cli.js

    - name: Prepare Package
      run: |
        NAME=$(cat package.json | jq -r '.name')
        VERSION=$(cat package.json | jq -r '.version')
        PKG_FOLDER="$NAME-$VERSION"
        mkdir -p $NAME-$VERSION/usr/bin
        cp -r debian/ $PKG_FOLDER/
        cp build/hsd-cli $PKG_FOLDER/usr/bin
        cp build/hsw-cli $PKG_FOLDER/usr/bin
        cp bin/hsd-rpc $PKG_FOLDER/usr/bin
        cp bin/hsw-rpc $PKG_FOLDER/usr/bin
        echo "PKG_FOLDER=$PKG_FOLDER" >> $GITHUB_ENV
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Publish PPA
      run: |
          export REPO_NAME=$(basename $GITHUB_REPOSITORY)
          cat <<EOT >> dput.cf
              [$REPO_NAME]
                fqdn = ppa.launchpad.net
                method = sftp
                incoming = ~$GITHUB_REPOSITORY_OWNER/ubuntu/$REPO_NAME/
                login = $GITHUB_REPOSITORY_OWNER
                allow_unsigned_uploads = 0
          EOT
          sudo apt-get install gpg debmake debhelper devscripts distro-info-data distro-info -y
          echo "$GPG_PRIVATE_KEY" | gpg --import --batch
          GPG_KEY_ID=$(gpg --list-keys --with-subkey-fingerprints --with-colons | grep sub | cut -d: -f5)
          cd $PKG_FOLDER
          for DISTRO in "$(distro-info --supported)"; do
              debmake -n
              rm -f debian/changelog
              dch --create -D bionic -M --package "hns-cli" --newversion "$VERSION"  --empty
              echo "y" | debuild  --no-lintian -S -sa \
                          -k"$GPG_KEY_ID" \
                          -p"gpg --batch --passphrase "$GPG_PASSPHRASE" --pinentry-mode loopback"
              dput -c ../dput.cf ppa.launchpad.net ../*.changes
          done

      env:
          GPG_PRIVATE_KEY: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.PPA_GPG_PASSPHRASE }}
    - name: Setup debug session
      with:
          limit-access-to-actor: true
      env:
          GPG_PRIVATE_KEY: ${{ secrets.PPA_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.PPA_GPG_PASSPHRASE }}
      uses: lhotari/action-upterm@v1
      if: failure()
